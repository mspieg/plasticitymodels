<?xml version='1.0' encoding='UTF-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value lines="1" type="filename">../../mesh/compression_mesh</string_value>
        </file>
        <cell>
          <string_value>triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">compression</string_value>
    </output_base_name>
    <visualization>
      <element name="P2DG">
        <family>
          <string_value>DG</string_value>
        </family>
        <degree>
          <integer_value rank="0">2</integer_value>
        </degree>
      </element>
    </visualization>
    <dump_periods/>
    <detectors/>
    <checkpointing>
      <checkpoint_period_in_timesteps>
        <integer_value rank="0">1</integer_value>
      </checkpoint_period_in_timesteps>
    </checkpointing>
  </io>
  <global_parameters>
    <ufl>
      <string_value lines="20" type="code" language="python"># define some useful invariants
edot = sym(grad(v_i))
edotd = dev(edot)
eII = sqrt(0.5*inner(edotd,edotd))


# set viscosity functions

# depth-dependent Mise-Dp
xc = SpatialCoordinate(p_e.cell())
Plith =  - xc[1]/L2h2  
inv_etadp_alpha = 2.*eII/(dp_A + dp_B*Plith)


# effective rheology

inv_etaprime_dp_alpha = inv_eta0 + inv_etadp_alpha  # inverse dimensionless effective viscosity

# set scaled viscosity 
eta = 1./inv_etaprime_dp_alpha
eta_0 = 1./inv_eta0

# more useful invariants
tau = 2.*eta*edotd
J2 = 0.5*inner(tau,tau)

# label some boundaries
ds_top = ds(4)
dx_bottom = dx(0)
dx_top = dx(1)</string_value>
    </ufl>
  </global_parameters>
  <system name="SolidFlow">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Velocity">
      <ufl_symbol name="global">
        <string_value lines="1">v</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="Left">
            <boundary_ids>
              <integer_value shape="1" rank="1">1</integer_value>
            </boundary_ids>
            <sub_components name="U">
              <components>
                <integer_value shape="1" rank="1">0</integer_value>
              </components>
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">1.</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="Right">
            <boundary_ids>
              <integer_value shape="1" rank="1">2</integer_value>
            </boundary_ids>
            <sub_components name="U">
              <components>
                <integer_value shape="1" rank="1">0</integer_value>
              </components>
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">-1.</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="Bottom">
            <boundary_ids>
              <integer_value shape="1" rank="1">3</integer_value>
            </boundary_ids>
            <sub_components name="W">
              <components>
                <integer_value shape="1" rank="1">1</integer_value>
              </components>
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">0.</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <field name="Pressure">
      <ufl_symbol name="global">
        <string_value lines="1">p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="code" language="python">def val(x):
	return -x[1]</string_value>
            </python>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics>
          </include_in_statistics>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <coefficient name="ghat">
      <ufl_symbol name="global">
        <string_value lines="1">f</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Vector" rank="1">
          <value type="value" name="WholeMesh">
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0. 0.</real_value>
              <comment>Turn off gravity in forcing term to calculate perturbed pressure rather than total pressure</comment>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="L2h2">
      <ufl_symbol name="global">
        <string_value lines="1">L2h2</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">0.032600913388918677</real_value>
              <comment>L**2/h**2 for 
eta_0 = 1.e22
u0 = 2.5e-3 m/yr
rho=2700.
g = 10.
 
L**2 = eta_0* u0/(rho g)</comment>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="inv_eta0">
      <ufl_symbol name="global">
        <string_value lines="1">inv_eta0</string_value>
        <comment>inverse of initial dimensionless background viscosity</comment>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="Quadrature">
            <family>
              <string_value>Quadrature</string_value>
            </family>
            <degree>
              <integer_value rank="0">8</integer_value>
            </degree>
          </element>
          <value type="value" name="Bottom">
            <region_ids>
              <integer_value shape="1" rank="1">0</integer_value>
            </region_ids>
            <constant>
              <real_value rank="0">10.</real_value>
            </constant>
          </value>
          <value type="value" name="Top">
            <region_ids>
              <integer_value shape="1" rank="1">1</integer_value>
            </region_ids>
            <constant>
              <real_value rank="0">0.01</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="dp_A">
      <ufl_symbol name="global">
        <string_value lines="1">dp_A</string_value>
        <comment>Drucker Prager A parameter = C cos\phi/(2\eta_0\eII^0)</comment>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="Quadrature">
            <family>
              <string_value>Quadrature</string_value>
            </family>
            <degree>
              <integer_value rank="0">8</integer_value>
            </degree>
          </element>
          <value type="value" name="Bottom">
            <region_ids>
              <integer_value shape="1" rank="1">0</integer_value>
            </region_ids>
            <constant>
              <real_value rank="0">1.e10</real_value>
            </constant>
          </value>
          <value type="value" name="Top">
            <region_ids>
              <integer_value shape="1" rank="1">1</integer_value>
            </region_ids>
            <constant>
              <real_value rank="0">1.7041103999999998</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="dp_B">
      <ufl_symbol name="global">
        <string_value lines="1">dp_B</string_value>
        <comment>dimensionless Drucker Prager B parameter = \delta \rho g h \sin\phi/2\eta_0\edotII^0</comment>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="Quadrature">
            <family>
              <string_value>Quadrature</string_value>
            </family>
            <degree>
              <integer_value rank="0">8</integer_value>
            </degree>
          </element>
          <value type="value" name="Bottom">
            <region_ids>
              <integer_value shape="1" rank="1">0</integer_value>
            </region_ids>
            <constant>
              <real_value rank="0">1.e10</real_value>
            </constant>
          </value>
          <value type="value" name="Top">
            <region_ids>
              <integer_value shape="1" rank="1">1</integer_value>
            </region_ids>
            <constant>
              <real_value rank="0">7.5227953607999991</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="alpha">
      <ufl_symbol name="global">
        <string_value lines="1">alpha</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
              <comment>parameter controlling amount of perturbed dynamic pressure to use in the drucker prager plasticity.
here yield stress is assumed to be dp_A + dp_B*(Plith + \alpha p)

alpha = 0 is depth dependent mise
dp_B =0 is mise
\alpha = 1 is fully pressure dependent dp.</comment>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <nonlinear_solver name="eta_0">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">bv = (inner(sym(grad(v_t)), 2.*eta_0*sym(grad(v_i))) - div(v_t)*p_i - inner(v_t,f_i)/L2h2)
bp = -p_t*div(v_i)

rv = bv*dx_bottom + bv*dx_top
rp = bp*dx_bottom + bp*dx_top

F = rv + rp</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(F,us_i,us_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_degree>
          <integer_value rank="0">8</integer_value>
        </quadrature_degree>
        <quadrature_rule name="canonical"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-11</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">10</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="umfpack"/>
          </preconditioner>
        </linear_solver>
        <ignore_all_solver_failures/>
      </type>
    <solve name="at_start"/></nonlinear_solver>
    <functional name="PressureIntegral">
            <string_value lines="20" type="code" language="python">int = p*dx</string_value>
            <ufl_symbol name="functional">
              <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"/>
          <include_in_statistics/></functional>
        </system>
  <system name="Divergence">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">ud</string_value>
    </ufl_symbol>
    <field name="Divergence">
      <ufl_symbol name="global">
        <string_value lines="1">d</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1DG">
            <family>
              <string_value>DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">bd = (d_t*d_i - d_t*div(v_i))
r = bd*dx_bottom + bd*dx_top</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(r,ud_i,ud_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-7</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-16</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">20</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-10</real_value>
            </relative_error>
            <absolute_error>
              <real_value rank="0">1.e-15</real_value>
            </absolute_error>
            <max_iterations>
              <integer_value rank="0">20</integer_value>
            </max_iterations>
            <zero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="sor"/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    <solve name="with_diagnostics"/></nonlinear_solver>
    </system>
  <system name="Viscosity">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uvisc</string_value>
    </ufl_symbol>
    <field name="Viscosity">
      <ufl_symbol name="global">
        <string_value lines="1">visc</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1DG">
            <family>
              <string_value>DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">1.</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">bv0 = visc_t*(visc_i - eta_0)
bv = visc_t*(visc_i - eta)
r = bv0*dx_bottom + bv*dx_top</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J=derivative(r,uvisc_i,uvisc_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ksponly"/>
        <relative_error>
          <real_value rank="0">1.e-10</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">10</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-8</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">20</integer_value>
            </max_iterations>
            <zero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="sor"/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    <solve name="with_diagnostics"/></nonlinear_solver>
    </system>
  <system name="J2">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uJ2</string_value>
    </ufl_symbol>
    <field name="J2project">
      <ufl_symbol name="global">
        <string_value lines="1">J2p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1DG">
            <family>
              <string_value>DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">bp = J2p_t*(J2p_i - J2)
F = bp*dx_bottom + bp*dx_top</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J=derivative(F,uJ2_i,uJ2_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ksponly"/>
        <relative_error>
          <real_value rank="0">1.e-10</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">10</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-8</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">20</integer_value>
            </max_iterations>
            <zero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="sor"/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    <solve name="with_diagnostics"/></nonlinear_solver>
    </system>
  <system name="e2">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">ue2</string_value>
    </ufl_symbol>
    <field name="e2project">
      <ufl_symbol name="global">
        <string_value lines="1">e2p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1DG">
            <family>
              <string_value>DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">be = e2p_t*(e2p_i - eII)
F = be*dx_bottom + be*dx_top</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J=derivative(F,ue2_i,ue2_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ksponly"/>
        <relative_error>
          <real_value rank="0">1.e-10</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">10</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-8</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">20</integer_value>
            </max_iterations>
            <zero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="sor"/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    <solve name="with_diagnostics"/></nonlinear_solver>
    </system>
  <system name="Edotprime">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uedp</string_value>
    </ufl_symbol>
    <field name="edotp">
      <ufl_symbol name="global">
        <string_value lines="1">edotp</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Tensor" rank="2">
          <element name="P1DG">
            <family>
              <string_value>DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
            <symmetric/>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant name="dim">
              <real_value symmetric="false" dim2="dim" shape="2 2" dim1="dim" rank="2">0 0 0 0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="SNES">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">bep = inner(edotp_t,edotp_i - edotd)
F = bep*dx_bottom + bep*dx_top</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(F,uedp_i,uedp_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ksponly"/>
        <relative_error>
          <real_value rank="0">1.e-7</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">10</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-7</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">50</integer_value>
            </max_iterations>
            <zero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="sor"/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    <solve name="with_diagnostics"/></nonlinear_solver>
    </system>
</terraferma_options>